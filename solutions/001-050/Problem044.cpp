/* Pentagon number
 * Pentagonal numbers are generated by the formula, P_n = n(3n − 1) / 2. The
 * first ten pentagonal numbers are:
 *
 *                 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their
 * difference, 70 − 22 = 48, is not pentagonal.
 *
 * Find the pair of pentagonal numbers, P_j and P_k, for which their sum and
 * difference are pentagonal and D = |P_k − P_j| is minimised; what is the
 * value of D? */

#include <cmath>
#include <iostream>
#include <vector>

// function prototypes
std::vector<unsigned> createPentagonalList(unsigned size);
bool is_pentagonal(unsigned P_n);

int main() {
  const unsigned SIZE = 10000;
  std::vector<unsigned> pentagonals = createPentagonalList(SIZE);
  unsigned min_difference = pentagonals.back();

  for (unsigned j = 0; j < pentagonals.size() - 2; ++j)
    for (unsigned k = j + 1; k < pentagonals.size() - 1; ++k) {
      const unsigned &P_j = pentagonals[j];
      const unsigned &P_k = pentagonals[k];
      if (is_pentagonal(P_k + P_j) and is_pentagonal(P_k - P_j))
        min_difference = std::min(P_k - P_j, min_difference);
    }

  std::cout << "Value of D is " << min_difference;
}

unsigned nth_pentagonal(unsigned n) { return n * (3 * n - 1) / 2; }

std::vector<unsigned> createPentagonalList(unsigned size) {
  std::vector<unsigned> pentagonals;
  for (unsigned n = 1; n <= size; ++n)
    pentagonals.emplace_back(nth_pentagonal(n));
  return pentagonals;
}

bool is_pentagonal(unsigned P_n) {
  const double n = (1 + std::sqrt(1 + 24 * P_n)) / 6;
  return std::floor(n) == n;
}

/* Thought process
 * 1. The old solution attempt was using a brute-force approach, but was not
 * well implemented. More analysis was needed.
 * 2. The previous attempt used a linear search to determine whether or not a
 * given number is pentagonal. A better way to check this comes from the
 * equation for pentagonal numbers. If we solve for n, using the quadratic
 * equation, we obtain n = [1 ± sqrt(1 + 24*P_n)] / 6. The number n must be
 * positive, thus we have that n = [1 + sqrt(1 + 24*P_n)] / 6. In addition, n
 * must be an integer. Thus, a given number, P_n, is pentagonal if the solution
 * to the quadratic equation is an integer. */
